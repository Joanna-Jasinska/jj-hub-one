{"mappings":"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","sources":["src/diceGame/data/dices.js","src/diceGame/js/functions.js","src/diceGame/data/newgame.js","src/diceGame/js/interface/onDices.js","src/diceGame/js/interface/onItems.js","src/diceGame/js/interface/clear-game.js","src/diceGame/js/initiate/_ng_dices-generate.js","src/diceGame/data/items.js","src/diceGame/js/initiate/_ng_items-generate.js","src/diceGame/js/initiate/newgame.js","src/diceGame/main.js"],"sourcesContent":["// export\nexport const dices = [\n  {\n    type: 'dice',\n    max: '4',\n    min: '1',\n    name: 'k4',\n    id: 'dicek4',\n  },\n  {\n    type: 'dice',\n    max: '6',\n    min: '1',\n    name: 'k6',\n    id: 'dicek6',\n  },\n  {\n    type: 'dice',\n    max: '8',\n    min: '1',\n    name: 'k8',\n    id: 'dicek8',\n  },\n  {\n    type: 'dice',\n    max: '10',\n    min: '1',\n    name: 'k10',\n    id: 'dicek10',\n  },\n  {\n    type: 'dice',\n    max: '12',\n    min: '1',\n    name: 'k12',\n    id: 'dicek12',\n  },\n  {\n    type: 'dice',\n    max: '20',\n    min: '1',\n    name: 'k20',\n    id: 'dicek20',\n  },\n  {\n    type: 'dice',\n    name: 'Random Dice',\n    id: 'dicerandom',\n  },\n];\n","export const log = (l = '------------------------------------------------') => {\n  console.log(l);\n};\n\nexport const functions = {\n  getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215)\n      .toString(16)\n      .padStart(6, 0)}`;\n  },\n  getRandom(max = 1, min = 1) {\n    return Math.floor(Math.random() * (max + 1 - min) + min);\n  },\n  getRandomDiceMax(max = 20, min = 4) {\n    let rangeMin = 4;\n    let rangeMax = 20;\n    const dices = [4, 6, 8, 10, 12, 20];\n    rangeMax = dices.indexOf(max) + 1;\n    rangeMin = dices.indexOf(min) + 1;\n    let rNum = Math.floor(\n      Math.random() * (rangeMax + 1 - rangeMin) + rangeMin - 1\n    );\n\n    return dices[rNum];\n  },\n\n  getDiceBackgroundColor(rolled, max = 6, min = 1) {\n    let bad = '#ffcc99'; //'#ffaa77'; //'#ff9966'; //red\n    let med = '#ffffbb'; //'#ffff99'; //yell\n    let uncommon = '#cfff9f'; //'#ccff99'; //l green\n    let epic = '#ff66ff'; // pink\n    let mythic = '#00ffff'; //'#66ffff'; // l blue\n    let perfect = '#00ff00'; // neon green\n    if (rolled == 20) return mythic;\n    if (rolled == min) return bad;\n    if (rolled == max) return perfect;\n    if (rolled <= Math.floor((max - min) / 5) + min) {\n      return bad;\n    }\n    if (rolled > 14) return epic;\n    if (rolled > 9) return uncommon;\n    return med;\n  },\n  getDiceBackgroundColorName(rolled, max = 6, min = 1) {\n    let varNamePart = `--dice-bg-color-`;\n    if (rolled == 20) return varNamePart + `mythic`;\n    if (rolled == min) return varNamePart + `bad`;\n    if (rolled == max) return varNamePart + `perfect`;\n    if (rolled <= Math.floor((max - min) / 5) + min) {\n      return varNamePart + `bad`;\n    }\n    if (rolled > 14) return varNamePart + `epic`;\n    if (rolled > 9) return varNamePart + `uncommon`;\n    return varNamePart + `medium`;\n  },\n};\n","// export\nexport const newGame = {\n  dices: [\n    {\n      id: 'dicek20',\n    },\n    {\n      id: 'dicek6',\n    },\n    {\n      id: 'dicek4',\n    },\n    {\n      id: 'dicerandom',\n    },\n    {\n      id: 'dicerandom',\n    },\n    {},\n  ],\n\n  items: [\n    {\n      id: 'use',\n    },\n    {\n      id: 'reroll',\n    },\n    {},\n  ],\n};\n","import { functions } from '../functions';\nexport const onDices = {\n  refreshDice(o) {\n    if (o.classList.contains('inactive')) {\n      o.classList.remove('inactive');\n    }\n    this.deselectDice(o);\n  },\n  rollDice(o) {\n    const diceFace = o.querySelector('.dice__rolled');\n    const diceMax = o.querySelector('.dice__max');\n    const dmax = parseInt(diceMax.innerText);\n    let dface = functions.getRandom(dmax);\n    diceFace.innerText = `${dface}`;\n    o.setAttribute(\n      'bgcolor',\n      `${functions.getDiceBackgroundColorName(dface, dmax)}`\n    );\n    // o.style.backgroundColor = `${f.getDiceBackgroundColor(dface, dmax)}`;\n    diceMax.innerText = `${dmax}`;\n  },\n  selectDice(o) {\n    if (o.classList.contains('dice') && !o.classList.contains('selected')) {\n      o.classList.add('selected');\n    } else {\n      this.deselectDice(o);\n    }\n  },\n  deactivateDice(o) {\n    if (o.classList.contains('dice') && !o.classList.contains('inactive')) {\n      o.classList.add('inactive');\n    }\n  },\n  deselectDice(o) {\n    if (o.classList.contains('selected')) {\n      o.classList.remove('selected');\n    }\n  },\n};\n","import { functions } from '../functions';\nimport { clearGame } from './clear-game';\nexport const onItems = {\n  checkActivation(o) {\n    return false;\n    // return functions.getRandom(1, 0);\n  },\n  refreshItem(o) {\n    if (o.classList.contains('inactive')) {\n      o.classList.remove('inactive');\n    }\n    this.deselectItem(o);\n  },\n  activateItem(o) {\n    if (o.classList.contains('item') && !o.classList.contains('selected')) {\n      o.classList.add('selected');\n      if (this.checkActivation(o)) {\n        clearGame.clearSelections();\n      }\n    } else {\n      this.deselectItem(o);\n    }\n  },\n  deselectItem(o) {\n    if (o.classList.contains('selected')) {\n      o.classList.remove('selected');\n    }\n  },\n\n  deactivateItem(o) {\n    if (o.classList.contains('item') && !o.classList.contains('inactive')) {\n      o.classList.add('inactive');\n    }\n  },\n};\n","import { log } from '../functions';\n\nimport { newGame } from '../../data/newgame';\nimport { newGameFunctions } from '../initiate/newgame';\nimport { onDices } from './onDices';\nimport { onItems } from './onItems';\n// import { _ng_dicesGenerate } from '../initiate/_ng_dices-generate';\nexport const clearGame = {\n  clearDiceBag() {\n    const diceBag = document.querySelector('.diceBag');\n    log('clearDiceBag()');\n    diceBag.innerText = '';\n    // _ng_dicesGenerate.generateButtons();\n    this.generateButtons();\n  },\n  clearItemBag() {\n    const itemBag = document.querySelector('.itemBag');\n    log('clearItemBag()');\n    itemBag.innerText = '';\n    // _ng_dicesGenerate.generateButtons();\n    // this.generateButtons();\n  },\n  clearSelections() {\n    const selected = document.querySelectorAll('.selected');\n    for (s of selected) {\n      s.classList.remove('selected');\n    }\n  },\n\n  generateButtons() {\n    const diceBag = document.querySelector('.diceBag');\n    log('generateButtons()');\n    // new game\n    diceBag.prepend(document.createElement('div'));\n    const newGameBtn = diceBag.querySelector('div');\n    newGameBtn.classList.add('button-new-game', 'button');\n    newGameBtn.innerText = 'New\\nGame';\n    newGameBtn.onclick = e => {\n      e.preventDefault();\n      newGameFunctions.initiateNewGame(newGame);\n    };\n    // end turn\n    diceBag.prepend(document.createElement('div'));\n    const endTurnBtn = diceBag.querySelector('div');\n    endTurnBtn.classList.add('button-end-turn', 'button');\n    endTurnBtn.innerText = 'End\\nTurn';\n    endTurnBtn.onclick = e => {\n      e.preventDefault();\n      const haveDices = document.querySelectorAll('.dice');\n      for (let i = 0; i < haveDices.length; i++) {\n        onDices.refreshDice(haveDices[i]);\n        onDices.rollDice(haveDices[i]);\n      }\n      const haveItems = document.querySelectorAll('.item');\n      for (let i = 0; i < haveItems.length; i++) {\n        onItems.refreshItem(haveItems[i]);\n      }\n    };\n  },\n};\n","import { log } from '../functions';\nimport { dices } from '../../data/dices';\nimport { functions } from '../functions';\nimport { onDices } from '../interface/onDices';\nexport const _ng_dicesGenerate = {\n  fetchDice(diceId = 'dicerandom') {\n    let dice = {};\n    for (const d of dices) {\n      if (d.id == diceId) {\n        return d;\n      }\n    }\n  },\n\n  generateDices(dicesInput) {\n    const o = this;\n    log(`generateDices(${dicesInput})`);\n    const diceBag = document.querySelector('.diceBag');\n    // console.log(diceBag);\n\n    for (const di of dicesInput) {\n      log(`fetching dice, dice: ${di}`);\n      log(di);\n      log(di.id);\n      log(`fetchDice(di): ${o.fetchDice(di.id)}`);\n      const d = o.fetchDice(di.id);\n      diceBag.append(document.createElement('div'));\n      const dice =\n        document.querySelectorAll('.diceBag > div')[\n          document.querySelectorAll('.diceBag > div').length - 1\n        ];\n      dice.classList.add(d.type ? d.type : 'dice', 'button');\n      dice.append(document.createElement('div'));\n      const diceFace = dice.querySelector('div');\n      diceFace.classList.add('dice__rolled');\n      let dmax = parseInt(d.max)\n        ? parseInt(d.max)\n        : functions.getRandomDiceMax();\n      let dface = functions.getRandom(dmax);\n      diceFace.innerText = `${dface}`;\n      // dice.style.backgroundColor = `${f.getDiceBackgroundColor(dface, dmax)}`;\n      // console.log(dice);\n      dice.setAttribute(\n        'bgcolor',\n        `${functions.getDiceBackgroundColorName(dface, dmax)}`\n      );\n      // diceBefore.style.backgroundColor = `${f.getDiceBackgroundColor(dface, dmax)}`;\n      dice.prepend(document.createElement('div'));\n      const diceMax = dice.querySelector('div');\n      diceMax.classList.add('dice__max');\n      diceMax.innerText = `${dmax}`;\n      dice.onclick = e => {\n        e.preventDefault();\n        onDices.selectDice(e.currentTarget);\n      };\n      // link.append(document.createElement('img'));\n      // link.classList.add('gallery__item');\n      // link.href = gi.original;\n      // const img = dice.querySelector('img');\n      // img.classList.add('gallery__image');\n      // img.src = gi.preview;\n      // img.alt = gi.description;\n      // img.dataset.source = gi.original;\n\n      // link.onclick = e => {\n      //   e.preventDefault();\n      // };\n    }\n  },\n};\n","export const items = [\n  {\n    type: 'item',\n    name: 'Waste\\nDice',\n    actions: ['use'],\n    reqDice: true,\n    minDiceAmount: 1,\n    maxDiceAmount: 1,\n    reqValue: false,\n    reqExact: false,\n    perTurnUses: 3,\n    id: 'use',\n  },\n  {\n    type: 'item',\n    name: 'Reroll\\nDice',\n    actions: ['reroll', 'use'],\n    reqDice: true,\n    minDiceAmount: 1,\n    maxDiceAmount: 1,\n    reqValue: false,\n    reqExact: false,\n    minValue: 0,\n    maxValue: 0,\n    exactValue: 0,\n    perTurnUses: 1,\n    id: 'reroll',\n  },\n];\n","import { log } from './../functions';\nimport { items } from '../../data/items';\nimport { functions } from '../functions';\nimport { onItems } from '../interface/onItems';\nexport const _ng_itemsGenerate = {\n  fetchItem(itemId = 'use') {\n    let item = {};\n    for (const itm of items) {\n      if (itm.id == itemId) {\n        return itm;\n      }\n    }\n  },\n\n  generateItems(itemsInput) {\n    const o = this;\n    log(`generateItems(${itemsInput})`);\n    const itemBag = document.querySelector('.itemBag');\n\n    for (const ii of itemsInput) {\n      log(`fetching item, item: ${ii}`);\n      log(ii);\n      log(ii.id);\n      log(`fetchItem(ii): ${o.fetchItem(ii.id)}`);\n      const i = o.fetchItem(ii.id);\n      log(i);\n      itemBag.append(document.createElement('div'));\n      const item =\n        document.querySelectorAll('.itemBag > div')[\n          document.querySelectorAll('.itemBag > div').length - 1\n        ];\n      item.classList.add(i.type ? i.type : 'item', 'button');\n      item.append(document.createElement('div'));\n      const itemFace = item.querySelector('div');\n      itemFace.classList.add('item__name');\n      let iname = i.name ? i.name : 'no\\nitem';\n      itemFace.innerText = `${iname}`;\n      item.prepend(document.createElement('div'));\n      const itemUses = item.querySelector('div');\n      itemUses.classList.add('item__uses');\n      let iuses = parseInt(i.perTurnUses) ? parseInt(i.perTurnUses) : '0';\n      itemUses.innerText = `${iuses}`;\n      //   : functions.getRandomDiceMax();\n      // let dface = functions.getRandom(dmax);\n\n      // dice.setAttribute(\n      //   'bgcolor',\n      //   `${functions.getDiceBackgroundColorName(dface, dmax)}`\n      // );\n      //  dice.prepend(document.createElement('div'));\n      // const diceMax = dice.querySelector('div');\n      // diceMax.classList.add('dice__max');\n      // diceMax.innerText = `${dmax}`;\n      item.onclick = e => {\n        e.preventDefault();\n        onItems.activateItem(e.currentTarget);\n      };\n    }\n  },\n};\n","import { log } from '../functions';\nimport { clearGame } from '../interface/clear-game';\nimport { _ng_dicesGenerate } from '../initiate/_ng_dices-generate';\nimport { _ng_itemsGenerate } from '../initiate/_ng_items-generate';\nexport const newGameFunctions = {\n  initiateNewGame(newGameState = newGame) {\n    log(`initiateNewGame(newGameState = ${newGameState})`);\n    clearGame.clearItemBag();\n    clearGame.clearDiceBag();\n    _ng_dicesGenerate.generateDices(newGameState.dices);\n    _ng_itemsGenerate.generateItems(newGameState.items);\n    log();\n  },\n};\n","// module.exports = require('./lodash');\nimport { dices } from './data/dices';\n// import { f } from './js/initiate/!getFunctions';\nimport { log } from './js/functions';\n// import { f } from './js/functions';\nimport { newGame } from './data/newgame';\nimport { newGameFunctions } from './js/initiate/newgame';\n\n// console.log(dices);\n// console.log(newGame);\n// console.log(`f= ${f}`);\n// console.log('random: ' + f.getRandom());\n\nlog();\nlog('-----------page loaded----------');\nlog();\n// f.initiateNewGame(newGame);\nnewGameFunctions.initiateNewGame(newGame);\n"],"names":["$b65bee900e43887d$export$b3c00370ed5c6834","type","max","min","name","id","$ec466ecf28c4722e$export$bef1f36f5486a6a3","l","arguments","length","console","log","$ec466ecf28c4722e$export$18af1f934c132a41","getRandomHexColor","concat","Math","floor","random","toString","padStart","getRandom","getRandomDiceMax","rangeMin","rangeMax","dices","indexOf","rNum","getDiceBackgroundColor","rolled","bad","med","uncommon","epic","mythic","perfect","getDiceBackgroundColorName","varNamePart","$2a7be05e25f563bb$export$4021de1c0df2c0bd","items","$ecc3cfd19ba2d67d$export$88eac910e3713790","refreshDice","o","classList","contains","remove","this","deselectDice","rollDice","diceFace","querySelector","diceMax","dmax","parseInt","innerText","dface","setAttribute","selectDice","add","deactivateDice","$dd08aefd5c4f1455$export$2e39a28c33c551aa","checkActivation","refreshItem","deselectItem","activateItem","$bbfae4f7bfc70b53$export$823928a8a208cbf3","clearSelections","deactivateItem","clearDiceBag","diceBag","document","generateButtons","clearItemBag","itemBag","selected","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","s","value","err","return","prepend","createElement","newGameBtn","onclick","e","preventDefault","$ad09539a03efa770$export$bb2f1e3630f06790","initiateNewGame","endTurnBtn","haveDices","i","haveItems","i1","$550d571926cb0da3$export$4780dd0a4b9fc05f","fetchDice","diceId","d","generateDices","dicesInput","di","append","dice","currentTarget","$0de5aafc1a72bc6c$export$17a1664ed1fb5d6f","actions","reqDice","minDiceAmount","maxDiceAmount","reqValue","reqExact","perTurnUses","minValue","maxValue","exactValue","$8a716f1459b778a1$export$6bc9baa6e78a4b59","fetchItem","itemId","itm","generateItems","itemsInput","ii","item","itemFace","iname","itemUses","iuses","newGameState","newGame"],"version":3,"file":"dice.54988c3d.js.map"}