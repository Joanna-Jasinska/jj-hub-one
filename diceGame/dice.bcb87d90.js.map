{"mappings":"AAIA,SAASA,Y,IAAUC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAqBA,UAAA,GAAZ,aAErBE,GAAC,EAADC,GAAC,EAADC,OAACC,E,IAAN,QAAKC,EAAAC,EAAKC,MAAKC,OAAAC,cAAVR,GAAAI,EAAAC,EAACI,QAAAC,MAADV,GAAC,EACJ,GADGW,EAAAP,EAACQ,MACAD,EAAEE,IAAMhB,EACV,OAAOc,C,UAFNV,GAAC,EAADC,EAACY,C,aAADd,GAAC,MAADK,EAACU,QAADV,EAACU,Q,YAADd,E,MAAAC,C,GAOP,SAASc,cAAcC,GACrBC,IAAI,iBAA4BC,OAAXF,EAAW,MAChC,IAAMG,EAAUC,SAASC,cAAc,YAGlCtB,GAAQ,EAARC,GAAQ,EAARC,OAAQC,E,IAAb,QAAKC,EAAAC,EAAYY,EAAUV,OAAAC,cAAtBR,GAAAI,EAAAC,EAAQI,QAAAC,MAARV,GAAQ,EAAgB,CAAxB,IAAMuB,EAANnB,EAAQQ,MACXM,IAAI,wBAA2BC,OAAHI,IAC5BL,IAAIK,GACJL,IAAI,kBAAmCC,OAAjBvB,UAAU2B,EAAGV,MACnC,IAAMF,EAAIf,UAAU2B,EAAGV,IACvBO,EAAQI,OAAOH,SAASI,cAAc,QACtC,IAAMC,EACJL,SAASM,iBAAiB,kBACxBN,SAASM,iBAAiB,kBAAkB5B,OAAS,GAEzD2B,EAAKE,UAAUC,IAAIlB,EAAEmB,KAAOnB,EAAEmB,KAAO,OAAQ,UAC7CJ,EAAKF,OAAOH,SAASI,cAAc,QACnC,IAAMM,EAAWL,EAAKJ,cAAc,OACpCS,EAASH,UAAUC,IAAI,gBACvB,IAAIG,EAAOC,SAAStB,EAAEuB,KAAOD,SAAStB,EAAEuB,KAAOC,EAAEC,mBAC7CC,EAAQF,EAAEG,UAAUN,GACxBD,EAASQ,UAAY,GAASpB,OAANkB,GAGxBX,EAAKc,aACH,UACA,GAA6CrB,OAA1CgB,EAAEM,2BAA2BJ,EAAOL,KAGzCN,EAAKgB,QAAQrB,SAASI,cAAc,QACpC,IAAMkB,EAAUjB,EAAKJ,cAAc,OACnCqB,EAAQf,UAAUC,IAAI,aACtBc,EAAQJ,UAAY,GAAQpB,OAALa,GACvBN,EAAKkB,QAAU,SAAAC,GACb,IAAIC,EAAID,EAAEE,cACND,EAAElB,UAAUoB,SAAS,UAAYF,EAAElB,UAAUoB,SAAS,cACxDH,EAAEI,iBACFH,EAAElB,UAAUC,IAAI,Y,YAhCjB5B,GAAQ,EAARC,EAAQY,C,aAARd,GAAQ,MAARK,EAAQU,QAARV,EAAQU,Q,YAARd,E,MAAAC,C","sources":["src/diceGame/js/initiate/_ng_dices-generate.js"],"sourcesContent":["// import { dices } from './data/dices';\n// import { f } from './js/functions';\n// import { newGame } from './data/newgame';\n\nfunction fetchDice(diceId = 'dicerandom') {\n  let dice = {};\n  for (d of dices) {\n    if (d.id == diceId) {\n      return d;\n    }\n  }\n}\n\nfunction generateDices(dicesInput) {\n  log(`generateDices(${dicesInput})`);\n  const diceBag = document.querySelector('.diceBag');\n  // console.log(diceBag);\n\n  for (const di of dicesInput) {\n    log(`fetching dice, dice: ${di}`);\n    log(di);\n    log(`fetchDice(di): ${fetchDice(di.id)}`);\n    const d = fetchDice(di.id);\n    diceBag.append(document.createElement('div'));\n    const dice =\n      document.querySelectorAll('.diceBag > div')[\n        document.querySelectorAll('.diceBag > div').length - 1\n      ];\n    dice.classList.add(d.type ? d.type : 'dice', 'button');\n    dice.append(document.createElement('div'));\n    const diceFace = dice.querySelector('div');\n    diceFace.classList.add('dice__rolled');\n    let dmax = parseInt(d.max) ? parseInt(d.max) : f.getRandomDiceMax();\n    let dface = f.getRandom(dmax);\n    diceFace.innerText = `${dface}`;\n    // dice.style.backgroundColor = `${f.getDiceBackgroundColor(dface, dmax)}`;\n    // console.log(dice);\n    dice.setAttribute(\n      'bgcolor',\n      `${f.getDiceBackgroundColorName(dface, dmax)}`\n    );\n    // diceBefore.style.backgroundColor = `${f.getDiceBackgroundColor(dface, dmax)}`;\n    dice.prepend(document.createElement('div'));\n    const diceMax = dice.querySelector('div');\n    diceMax.classList.add('dice__max');\n    diceMax.innerText = `${dmax}`;\n    dice.onclick = e => {\n      let t = e.currentTarget;\n      if (t.classList.contains('dice') && !t.classList.contains('inactive')) {\n        e.preventDefault();\n        t.classList.add('inactive');\n      }\n    };\n    // link.append(document.createElement('img'));\n    // link.classList.add('gallery__item');\n    // link.href = gi.original;\n    // const img = dice.querySelector('img');\n    // img.classList.add('gallery__image');\n    // img.src = gi.preview;\n    // img.alt = gi.description;\n    // img.dataset.source = gi.original;\n\n    // link.onclick = e => {\n    //   e.preventDefault();\n    // };\n  }\n}\n"],"names":["fetchDice","diceId","arguments","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","dices","Symbol","iterator","next","done","d","value","id","err","return","generateDices","dicesInput","log","concat","diceBag","document","querySelector","di","append","createElement","dice","querySelectorAll","classList","add","type","diceFace","dmax","parseInt","max","f","getRandomDiceMax","dface","getRandom","innerText","setAttribute","getDiceBackgroundColorName","prepend","diceMax","onclick","e","t","currentTarget","contains","preventDefault"],"version":3,"file":"dice.bcb87d90.js.map"}