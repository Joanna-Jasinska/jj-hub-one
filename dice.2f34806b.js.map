{"mappings":"AAEA,SAASA,M,IAAIC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAsDA,UAAA,GAAlD,mDACfE,QAAQJ,IAAIC,E,CAEd,IAAMI,EAAI,CACRC,kBAAA,WACE,MAAO,IAEWC,OAFPC,KAAKC,MAAsB,SAAhBD,KAAKE,UACxBC,SAAS,IACTC,SAAS,EAAG,G,EAEjBC,UAAA,W,IAAUC,EAAAZ,UAAAC,OAAA,YAAAD,UAAA,GAAOA,UAAA,GAAD,EAAGa,EAAAb,UAAAC,OAAA,YAAAD,UAAA,GAAOA,UAAA,GAAD,EACvB,OAAOM,KAAKC,MAAMD,KAAKE,UAAYI,EAAM,EAAIC,GAAOA,E,EAEtDC,iBAAA,W,IAAiBF,EAAAZ,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAF,GAAIa,EAAAb,UAAAC,OAAA,YAAAD,UAAA,GAAOA,UAAA,GAAD,EAC3Be,EAAW,EACXC,EAAW,GACTC,EAAQ,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAChCD,EAAWC,EAAMC,QAAQN,GAAO,EAChCG,EAAWE,EAAMC,QAAQL,GAAO,EAChC,IAAIM,EAAOb,KAAKC,MACdD,KAAKE,UAAYQ,EAAW,EAAID,GAAYA,EAAW,GAGzD,OAAOE,EAAME,E,EAGfC,uBAAA,SAAuBC,G,IAAQT,EAAAZ,UAAAC,OAAA,YAAAD,UAAA,GAAOA,UAAA,GAAD,EAAGa,EAAAb,UAAAC,OAAA,YAAAD,UAAA,GAAOA,UAAA,GAAD,EACxCsB,EAAM,UACNC,EAAM,UACNC,EAAW,UACXC,EAAO,UACPC,EAAS,UACTC,EAAU,UACd,OAAc,IAAVN,EAAqBK,EACrBL,GAAUR,EAAYS,EACtBD,GAAUT,EAAYe,EACtBN,GAAUf,KAAKC,OAAOK,EAAMC,GAAO,GAAKA,EACnCS,EAELD,EAAS,GAAWI,EACpBJ,EAAS,EAAUG,EAChBD,C,EAETK,2BAAA,SAA2BP,G,IAAQT,EAAAZ,UAAAC,OAAA,YAAAD,UAAA,GAAOA,UAAA,GAAD,EAAGa,EAAAb,UAAAC,OAAA,YAAAD,UAAA,GAAOA,UAAA,GAAD,EAC5C6B,EAAe,mBACnB,OAAc,IAAVR,EAAqBQ,EAAe,SACpCR,GAAUR,EAAYgB,EAAe,MACrCR,GAAUT,EAAYiB,EAAe,UACrCR,GAAUf,KAAKC,OAAOK,EAAMC,GAAO,GAAKA,EACnCgB,EAAe,MAEpBR,EAAS,GAAWQ,EAAe,OACnCR,EAAS,EAAUQ,EAAe,WAC/BA,EAAe,Q","sources":["src/diceGame/js/functions.js"],"sourcesContent":["// export\n\nfunction log(l = '------------------------------------------------') {\n  console.log(l);\n}\nconst f = {\n  getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215)\n      .toString(16)\n      .padStart(6, 0)}`;\n  },\n  getRandom(max = 1, min = 1) {\n    return Math.floor(Math.random() * (max + 1 - min) + min);\n  },\n  getRandomDiceMax(max = 20, min = 4) {\n    let rangeMin = 4;\n    let rangeMax = 20;\n    const dices = [4, 6, 8, 10, 12, 20];\n    rangeMax = dices.indexOf(max) + 1;\n    rangeMin = dices.indexOf(min) + 1;\n    let rNum = Math.floor(\n      Math.random() * (rangeMax + 1 - rangeMin) + rangeMin - 1\n    );\n\n    return dices[rNum];\n  },\n\n  getDiceBackgroundColor(rolled, max = 6, min = 1) {\n    let bad = '#ffcc99'; //'#ffaa77'; //'#ff9966'; //red\n    let med = '#ffffbb'; //'#ffff99'; //yell\n    let uncommon = '#cfff9f'; //'#ccff99'; //l green\n    let epic = '#ff66ff'; // pink\n    let mythic = '#00ffff'; //'#66ffff'; // l blue\n    let perfect = '#00ff00'; // neon green\n    if (rolled == 20) return mythic;\n    if (rolled == min) return bad;\n    if (rolled == max) return perfect;\n    if (rolled <= Math.floor((max - min) / 5) + min) {\n      return bad;\n    }\n    if (rolled > 14) return epic;\n    if (rolled > 9) return uncommon;\n    return med;\n  },\n  getDiceBackgroundColorName(rolled, max = 6, min = 1) {\n    let varNamePart = `--dice-bg-color-`;\n    if (rolled == 20) return varNamePart + `mythic`;\n    if (rolled == min) return varNamePart + `bad`;\n    if (rolled == max) return varNamePart + `perfect`;\n    if (rolled <= Math.floor((max - min) / 5) + min) {\n      return varNamePart + `bad`;\n    }\n    if (rolled > 14) return varNamePart + `epic`;\n    if (rolled > 9) return varNamePart + `uncommon`;\n    return varNamePart + `medium`;\n  },\n};\n"],"names":["log","l","arguments","length","console","f","getRandomHexColor","concat","Math","floor","random","toString","padStart","getRandom","max","min","getRandomDiceMax","rangeMin","rangeMax","dices","indexOf","rNum","getDiceBackgroundColor","rolled","bad","med","uncommon","epic","mythic","perfect","getDiceBackgroundColorName","varNamePart"],"version":3,"file":"dice.2f34806b.js.map"}